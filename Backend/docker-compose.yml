version: '3'
services:
  api-server:
    container_name: api-server
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - user-mysql
      - product-mysql
      - billing-mysql

  user-mysql:
    container_name: "user-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: userDB
    volumes:
      - ./userInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      -
  product-mysql:
    container_name: "product-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13307:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: productDB
    volumes:
      - ./productInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  billing-mysql:
    container_name: "billing-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13308:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: billingDB
    volumes:
      - ./billingInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: ONEMILLIONTRAFFIC://kafka:9092,ONEMILLIONTRAFFIC_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ONEMILLIONTRAFFIC:ONEMILLIONTRAFFIC,ONEMILLIONTRAFFIC_HOST:ONEMILLIONTRAFFIC
      KAFKA_INTER_BROKER_LISTENER_NAME: ONEMILLIONTRAFFIC
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
