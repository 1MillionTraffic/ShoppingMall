version: '3'
services:
  api-server:
    container_name: api-server
    restart: always
    build:
      context: ./
      dockerfile: DockerfileApi
    ports:
      - "8081:8081"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      - user-mysql
      - product-mysql
      - mongo-cart-db
      - mongo-client-temp

  user-mysql:
    container_name: "user-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: userDB
    volumes:
      - ./userInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  product-mysql:
    container_name: "product-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13307:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: productDB
    volumes:
      - ./productInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  billing-mysql:
    container_name: "billing-mysql" # spring 설정에 database-url을 해당 container 이름으로 해야한다
    image: mysql:8.0
    ports:
      - "13308:3306"
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: billingDB
    volumes:
      - ./billingInit.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  elastic-search:
    container_name: "elastic-search"
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  mongo-cart-db:
    image: mongo:5.0.16
    container_name: mongo-cart-db
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-cart-volume:/data/db
    environment:
      - MONGO_INITDB_DATABASE=cart

  mongo-client-temp:
    image: mongo:5.0.16
    container_name: mongo-client-temp
    links:
      - mongo-cart-db:mongo
    command: mongo --host mongo --eval  "db.getSiblingDB('cart').createUser({user:'manager', pwd:'1234', roles:[{role:'readWrite',db:'cart'}]});"
    depends_on:
      - mongo-cart-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  mongo-cart-volume:
    driver: local
