plugins {
    id 'java'
    id "io.spring.dependency-management" version "1.1.3"
    id 'org.springframework.boot' version '2.7.9'
    id "org.jetbrains.kotlin.jvm" version "1.9.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.10"
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "org.jetbrains.kotlin.plugin.spring"
    apply plugin: "org.jetbrains.kotlin.plugin.jpa"

    group = 'org.example'
    version = '0.1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    if (name != 'domain') {
        dependencies {
            implementation project(':domain')
        }
    }

    //모든 모듈에서 쓰는 공통 라이브러리
    dependencies {
        // web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // db
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        runtimeOnly 'com.mysql:mysql-connector-j'
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

        // util
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        // test
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    test {
        useJUnitPlatform()
    }

    kotlin {
        jvmToolchain(11)
    }
}
